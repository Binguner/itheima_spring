<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--   1 目标类-->
    <bean id="userDao" class="com.itheima.jdk.UserDaoImpl"/>
    <!--   2 切面类 -->
    <bean id="myAspect" class="com.itheima.aspectj.xml.MyAspect"/>
    <!--   2 aop 编程 -->
    <aop:config>
        <!-- 配置切面 -->
        <aop:aspect ref="myAspect">
            <!-- 3.1 配置切入点，通知最后增强哪些方法-->
            <aop:pointcut id="myPointCut" expression="execution(* com.itheima.jdk.*.*(..))"/>
            <!-- 3.2 关联通知 Advice 和切入点 pointCut-->
            <!-- 3.2.1 前置通知-->
            <aop:before method="myBafore" pointcut-ref="myPointCut"/>
            <!-- 3.2.2 后置通知，在方法返回之后执行，就可以获取返回值
            returning 属性：用于设置后置通知的第二个参数的名称，类型是 Object-->
            <aop:after-returning method="myAfterReturning" pointcut-ref="myPointCut" returning="joinPoint" />
            <!-- 3.2.3 环绕通知-->
            <aop:around method="myAround" pointcut-ref="myPointCut"/>
            <!-- 3.2.4 抛出通知：用于处理程序发送异常-->
            <!-- * 注意：如果程序没用异常，将不会执行增强-->
            <!-- * throwing 属性：用于设置通知第二个参数的名称，类型 Throwable-->
            <aop:after-throwing method="myAfterThrowing" pointcut-ref="myPointCut" throwing="e"/>
            <!-- 3.2.5 最终通知：无论程序发送任何事请，都回执行-->

        </aop:aspect>
    </aop:config>
</beans>